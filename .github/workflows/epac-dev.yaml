name: EPAC-DEV Workflow

env:
  REVIEWER: andrewybarra # Change this to a GitHub reviewer
  pacEnvironment: EPAC-Staging # Change this to a PAC environment name
  definitionsRootFolder: Definitions
  planFolder: Output

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Deployment Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Check for NO_ACTIONS
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if (Get-ChildItem -Path $env:definitionsRootFolder -Filter "NO_ACTIONS" -Recurse) {
            Write-Output "NO_ACTIONS file found, exiting"
            gh run cancel ${{ github.run_id }}
            gh run watch ${{ github.run_id }}
          }
      - shell: pwsh
        name: Install Required Modules
        run: |
          Install-Module Az.ResourceGraph -Force -AllowClobber
          Install-Module Az.Resources -Force -AllowClobber
          Install-Module EnterprisePolicyAsCode -Force
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
          enable-AzPSSession: true
      - name: Build Deployment Plan
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Build-DeploymentPlans -definitionsRootFolder $env:definitionsRootFolder -outputFolder $env:planFolder -pacEnvironment $env:pacEnvironment
            $epacInfoStream | Set-Content body.txt
          azPSVersion: "latest"
      - shell: pwsh
        name: Detect Plan
        run: |
          if (Get-ChildItem -Path $env:definitionsRootFolder -Filter "NO_DEPLOY" -Recurse) {
            Write-Output "NO_DEPLOY file found, exiting"
            gh run cancel ${{ github.run_id }}
            gh run watch ${{ github.run_id }}
          }
          if (Test-Path $env:planFolder) {
            echo "Deploy=true" >> $env:GITHUB_ENV
            if (!(Get-ChildItem $env:planFolder -Recurse -Include policy-plan.json)){
              echo "RolesOnly=true" >> $env:GITHUB_ENV
            }
          }
      - name: Display Policy-Plan file
        run: Get-Content Output/plans-EPAC-Staging/policy-plan.json | ConvertFrom-Json | ConvertTo-Json -Depth 10
        shell: pwsh
      - name: Display Roles-Plan file
        run: Get-Content Output/plans-EPAC-Staging/roles-plan.json | ConvertFrom-Json | ConvertTo-Json -Depth 10
        shell: pwsh
      - name: Upload Deployment Plan as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploymentPlan
          path: Output/dp


  deployPolicy:
    needs: build
    name: Deploy Policy Plan
    runs-on: ubuntu-latest
    environment: 
      name: EPAC-DEV
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: deploymentPlan
          path: Output/dp
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - shell: pwsh
        name: Install Required Modules
        run: |
          Install-Module Az.ResourceGraph -Force -Verbose -AllowClobber
          Install-Module Az.Resources -Force -Verbose -AllowClobber
          Install-Module EnterprisePolicyAsCode -Force
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
          enable-AzPSSession: true
      - name: Deploy Policy Plan
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Deploy-PolicyPlan -definitionsRootFolder $env:definitionsRootFolder -inputFolder "Output/dp" -pacEnvironment $env:pacEnvironment
          azPSVersion: "latest"

  deployRoles:
    needs: deployPolicy
    name: Deploy Policy Roles
    runs-on: ubuntu-latest
    environment: 
      name: EPAC-DEV
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - shell: pwsh
        name: Install Required Modules
        run: |
          Install-Module Az.ResourceGraph -Force -Verbose -AllowClobber
          Install-Module Az.Resources -Force -Verbose -AllowClobber
          Install-Module EnterprisePolicyAsCode -Force
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
          enable-AzPSSession: true
      - name: Deploy Role Plan
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Deploy-RolesPlan -definitionsRootFolder $env:definitionsRootFolder -inputFolder $env:planFolder -pacEnvironment $env:pacEnvironment
          azPSVersion: "latest"
      - shell: pwsh
        name: Confirm PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          gh pr close $env:PR_NUMBER --comment 'Changes deployed' --delete-branch
