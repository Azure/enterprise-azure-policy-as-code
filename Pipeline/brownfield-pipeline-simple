variables:
  # This pipeline is used to deploy Policy definitions, Initiative definitions and Assignments into Azure. Replace the tenantId with your tenant
  planFolder: ./output/plans
  tenantId: "18dd45cc-fd71-4b8d-9a77-3db22959915f"

  # Replace these scopes with your desired deployment scope for each stage
  devRootScope: "/subscriptions/8b86fb92-1371-492a-9d0b-a9d2c67193a5"
  testRootScope: "/subscriptions/8b86fb92-1371-492a-9d0b-a9d2c67193a5"
  prodRootScope: "/providers/Microsoft.Management/managementGroups/Contoso-Root"

  # Environment names for usage with global-settings.jsonc
  devAssignmentSelector: "PAC-DEV"
  testAssignmentSelector: "PAC-TEST"
  prodAssignmentSelector: "PAC-PROD"

  # rootScope definitions per environment
  devPlanFile: "$(planFolder)/dev-plan.json"
  devRolesPlan: "$(planFolder)/dev-roles.json"
  testPlanFile: "$(planFolder)/test-plan.json"
  testRolesPlan": "$(planFolder)/test-roles.json"
  prodPlanFile: "$(planFolder)/prod-plan.json"
  prodRolesPlan: "$(planFolder)/prod-roles.json"
  prodPlanFileIn: "$(Pipeline.Workspace)/prod-plan/prod-plan.json"
  rolesPlanFileIn: "$(Pipeline.Workspace)/roles-plan/prod-roles.json"

  # Use the plain text name of each service connection as a reference
  devServiceConnection: "sc-pac-dev"
  testServiceConnection: "sc-pac-dev"
  prodServiceConnection: "sc-pac-prod"

# what to build trigger
trigger:
  #   # branch names are case senititve
  branches:
    include:
      - /*
  paths:
    include:
      - Definitions/*
      - Scripts/*
      - Pipeline/*
    exclude:
      - Definitions/README.MD
      - Docs/*
      - Scripts/Test/*
      - Scripts/Operations/*

pr: none

stages:
  - stage: DEV
    displayName: "DEV"
    condition: and(in(variables['Build.Reason'], 'Manual', 'IndividualCI', 'BatchedCI'), not(contains(variables['Build.SourceBranch'], 'refs/heads/main')))
    jobs:
      - deployment: DEV_Deployment
        environment: PAC-DEV
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: AzureCLI@2
                  displayName: Planning DEV deployment
                  inputs:
                    azureSubscription: $(devServiceConnection)
                    scriptType: pscore
                    scriptLocation: scriptPath
                    scriptPath: "Scripts/Deploy/Build-AzPoliciesInitiativesAssignmentsPlan.ps1"
                    arguments: -TenantId $(tenantId) `
                      -AssignmentSelector $(devAssignmentSelector) `
                      -RootScope $(devRootScope) `
                      -PlanFile $(devPlanFile) `
                      -InformationAction Continue
                - task: AzurePowerShell@5
                  displayName: Deploy to DEV environment
                  inputs:
                    azureSubscription: $(devServiceConnection)
                    ScriptPath: "Scripts/Deploy/Deploy-AzPoliciesInitiativesAssignmentsFromPlan.ps1"
                    ScriptArguments: "-PlanFile $(devPlanFile) -RolesPlanFile $(devRolesPlan) -InformationAction Continue"
                    pwsh: true
                    azurePowerShellVersion: LatestVersion
                  condition: succeeded()
                - task: AzureCLI@2
                  displayName: Set DEV Role Assignments
                  inputs:
                    azureSubscription: $(devServiceConnection)
                    scriptType: pscore
                    scriptLocation: scriptPath
                    scriptPath: "Scripts/Deploy/Set-AzPolicyRolesFromPlan.ps1"
                    arguments: -PlanFile $(devRolesPlan) `
                      -InformationAction Continue
                  condition: succeeded()
  - stage: PLAN_PROD_FEATURE
    displayName: "Plan PROD Feature Branch"
    dependsOn: DEV
    condition: and(succeeded('DEV'), in(variables['Build.Reason'], 'Manual', 'IndividualCI', 'BatchedCI'), not(contains(variables['Build.SourceBranch'], 'refs/heads/main')))
    jobs:
      - deployment: PROD_FEATURE_Plan
        environment: PAC-DEV
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: AzureCLI@2
                  displayName: Planning PROD environment - Feature branch
                  inputs:
                    azureSubscription: $(prodServiceConnection)
                    scriptType: pscore
                    scriptLocation: scriptPath
                    scriptPath: "Scripts/Deploy/Build-AzPoliciesInitiativesAssignmentsPlan.ps1"
                    arguments: -TenantId $(tenantId) `
                      -AssignmentSelector $(prodAssignmentSelector) `
                      -RootScope $(prodRootScope) `
                      -PlanFile $(prodPlanFile) `
                      -InformationAction Continue
                  condition: succeeded()
  - stage: TEST
    displayName: "TEST"
    condition: and(not(in(variables['Build.Reason'], 'Manual')), contains(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: TEST_Deployment
        environment: PAC-TEST
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: AzureCLI@2
                  displayName: Planning TEST deployment
                  inputs:
                    azureSubscription: $(testServiceConnection)
                    scriptType: pscore
                    scriptLocation: scriptPath
                    scriptPath: "Scripts/Deploy/Build-AzPoliciesInitiativesAssignmentsPlan.ps1"
                    arguments: -TenantId $(tenantId) `
                      -AssignmentSelector $(testAssignmentSelector) `
                      -RootScope $(testRootScope) `
                      -PlanFile $(testPlanFile) `
                      -InformationAction Continue
                - task: AzurePowerShell@5
                  displayName: Deploy to TEST environment
                  inputs:
                    azureSubscription: $(testServiceConnection)
                    ScriptPath: "Scripts/Deploy/Deploy-AzPoliciesInitiativesAssignmentsFromPlan.ps1"
                    ScriptArguments: "-PlanFile $(testPlanFile) -RolesPlanFile $(testRolesPlan) -InformationAction Continue"
                    pwsh: true
                    azurePowerShellVersion: LatestVersion
                  condition: succeeded()
                - task: AzureCLI@2
                  displayName: Set TEST Role Assignments
                  inputs:
                    azureSubscription: $(testServiceConnection)
                    scriptType: pscore
                    scriptLocation: scriptPath
                    scriptPath: "Scripts/Deploy/Set-AzPolicyRolesFromPlan.ps1"
                    arguments: -PlanFile $(testRolesPlan) `
                      -InformationAction Continue
                  condition: succeeded()
  - stage: PLAN_PROD_MAIN
    displayName: "Plan PROD Main Branch"
    dependsOn: TEST
    condition: and(succeeded('TEST'), contains(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: PROD_MAIN_Plan
        environment: PAC-TEST
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: AzureCLI@2
                  displayName: Planning PROD environment - Main branch
                  inputs:
                    azureSubscription: $(prodServiceConnection)
                    scriptType: pscore
                    scriptLocation: scriptPath
                    scriptPath: "Scripts/Deploy/Build-AzPoliciesInitiativesAssignmentsPlan.ps1"
                    arguments: -TenantId $(tenantId) `
                      -AssignmentSelector $(prodAssignmentSelector) `
                      -RootScope $(prodRootScope) `
                      -PlanFile $(prodPlanFile) `
                      -InformationAction Continue
                  condition: succeeded()
                - publish: "$(prodPlanFile)"
                  artifact: "prod-plan"
                  condition: succeeded()
  - stage: PROD_DEPLOY
    displayName: "PROD Deploy"
    dependsOn: PLAN_PROD_MAIN
    condition: and(succeeded('PLAN_PROD_MAIN'), contains(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: PROD_Deployment
        environment: PAC-PROD
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                # Artifact (plan) is downloaded automatically
                - task: AzurePowerShell@5
                  displayName: Deploy to PROD environment
                  inputs:
                    azureSubscription: $(prodServiceConnection)
                    ScriptPath: "Scripts/Deploy/Deploy-AzPoliciesInitiativesAssignmentsFromPlan.ps1"
                    ScriptArguments: "-PlanFile $(prodPlanFileIn) -RolesPlanFile $(prodRolesPlan) -InformationAction Continue"
                    pwsh: true
                    azurePowerShellVersion: LatestVersion
                  condition: succeeded()
                - publish: "$(prodRolesPlan)"
                  artifact: "roles-plan"
                  condition: succeeded()
                - task: AzureCLI@2
                  displayName: Set PROD Role Assignments
                  inputs:
                    azureSubscription: $(prodServiceConnection)
                    scriptType: pscore
                    scriptLocation: scriptPath
                    scriptPath: "Scripts/Deploy/Set-AzPolicyRolesFromPlan.ps1"
                    arguments: -PlanFile $(prodRolesPlan) `
                      -InformationAction Continue
                  condition: succeeded()
